// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4729.FRC2019;

import org.usfirst.frc4729.FRC2019.commands.*;
import org.usfirst.frc4729.FRC2019.subsystems.Mechanism;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.DriverStation.MatchType;
import edu.wpi.first.wpilibj.GenericHID.RumbleType;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.DriverStation;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Joystick leftStick = new Joystick(0);
    public Joystick rightStick = new Joystick(1);

    public Button leftButton3;
    public Button leftButton2;
    public Button leftTrigger;
    public Button leftButton7;

    public Button rightButton3;
    public Button rightButton2;
    public Button rightTrigger;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        boolean real = DriverStation.getInstance().getMatchType() != MatchType.None;
        if (!leftStick.getName().equals("") || real) {
            leftButton3 = new JoystickButton(leftStick, 3);
            leftButton2 = new JoystickButton(leftStick, 2);
            leftTrigger = new JoystickButton(leftStick, 1);
            leftButton7 = new JoystickButton(leftStick, 7);

            leftButton3.whenPressed(new WinchUp());
            leftButton2.whenPressed(new WinchDown());
            // leftTrigger.whenPressed(new FollowGaffer());
            leftButton7.whenPressed(new CancelAlign());
        }

        if (!rightStick.getName().equals("") || real) {
            rightButton3 = new JoystickButton(rightStick, 3);
            rightButton2 = new JoystickButton(rightStick, 2);
            rightTrigger = new JoystickButton(rightStick, 1);

            rightButton3.whenPressed(new Extend());
            rightButton2.whenPressed(new Retract());
            rightTrigger.whenPressed(new Eject());
        }
    }
}
