// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4729.FRC2019;

import org.usfirst.frc4729.FRC2019.commands.*;
//import org.usfirst.frc4729.FRC2019.subsystems.Mechanism;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
// import sun.text.normalizer.NormalizerImpl.UTF16Plus;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.DriverStation.MatchType;
import edu.wpi.first.wpilibj.GenericHID.RumbleType;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.buttons.POVButton;
import edu.wpi.first.wpilibj.DriverStation;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Joystick leftStick = new Joystick(2);
    public Joystick rightStick = new Joystick(1);
    public XboxController controller1 = new XboxController(0);
    public XboxController controller2 = new XboxController(1);

    // public Button leftButton3;
    // public Button leftButton2;

    // public Button rightButton3;
    // public Button rightButton2;
    // public Button rightTrigger;
    // public Button rightButton11;

    public Button b;
    public Button x;
    public Button y;
    public Button start;
    public Button back;
    public Button a;
    public Button rb;

    public Button b2;
    public Button x2;
    public Button a2;
    public Button y2;
    public Button povUP;
    public Button povUPL;
    public Button povUPR;
    public Button povDN;
    public Button povDNL;
    public Button povDNR;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        boolean actualMatch = (DriverStation.getInstance().getMatchType() != MatchType.None);

        if (actualMatch || controller1.getName().length() > 0) {
            b     = new JoystickButton(controller1, 2);
            x     = new JoystickButton(controller1, 3);
            y     = new JoystickButton(controller1, 4);
            start = new JoystickButton(controller1, 8);
            back  = new JoystickButton(controller1, 7);
            a    = new JoystickButton(controller1, 1);            

            // y.whileHeld(new WinchUp());
            // b.whileHeld(new WinchDown());
            
            //x.whenPressed(new Eject());
            start.whenPressed(new TeleopAutomagic());
            back.whenPressed(new CancelTeleopAutomagic());
           //a.whenPressed(new CalibrateWinch());
        }

      //  if (actualMatch || controller2.getName().length() > 0) {
            // b2 = new JoystickButton(controller2, 2);
            // x2 = new JoystickButton(controller2, 3);
            // a2 = new JoystickButton(controller2, 1);
            // y2 = new JoystickButton(controller2, 4);

            povUPL = new POVButton(controller2, 315);
            povUP = new POVButton(controller2, 0);
            povUPR = new POVButton(controller2, 45);
            povDNR = new POVButton(controller2, 135);
            povDN = new POVButton(controller2, 180);
            povDNL = new POVButton(controller2, 225);

            // x2.whenPressed(new PanelIn());
            // a2.whenPressed(new PanelOut());
            // b2.whenPressed(new MitchLow());
            // y2.whenPressed(new MitchHigh());
             
            povUP.whileHeld(new WinchUp());
            povUPL.whileHeld(new WinchUp());
            povUPR.whileHeld(new WinchUp());
            povDN.whileHeld(new WinchDown());
            povDNL.whileHeld(new WinchDown());
            povDNR.whileHeld(new WinchDown());
    //    }
    }
}
